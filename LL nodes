//Creating nodes for linked lists and finding length of LL and searching for the element in LL.

//Create a class Node
class Node{
    public:
        int data;
        Node* next;

    public:
        Node(int value, Node* next1){
                data = value;
                next = next1;
        }
    
    public:
        Node(int data1){
            data=data1;
            next= nullptr;
        }
};

//Converting array to a linked list
Node* ConvertArr2LL(int* arr, int size){
    Node* start = new Node(arr[0]);
    Node* ptr = start;
    for(int i=1; i<size; i++){
        Node* n = new Node(arr[i]);
        ptr->next = n;
        ptr = n;
    }
    //cout<<start->data<<endl;
    return start;
}

//to finf length of a linked list
void LengthLL(Node* start){
    int count = 0;
    Node* ptr = start;
    while(ptr){
        ptr = ptr->next;
        count++; 
    }
    cout<<"Length of Linked List: "<<count<<endl;
}

//Searching for a value in linked list
void Search(Node* start, int value){
    Node* ptr = start;
    while(ptr){
        if(ptr->data == value) 
            cout<<"Value found"<<endl;
            ptr = ptr->next;
        if (ptr->next == nullptr && ptr->data != value){
            cout<<"Value not found!"<<endl;
        }
        
    }

}
